name: nightly-test-runs
on:
  workflow_dispatch:

env:
  REPO: teranode
  SETTINGS_CONTEXT_DEFAULT: default_context
  GO_VERSION: '1.25.2'
  TEST_DIR: ./test/e2e/daemon

permissions:
  contents: read
  pull-requests: read
  id-token: write

jobs:
  pull-image:
    runs-on: ubuntu-latest
    steps:
      - name: Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@f974e0c5942f8f37973c4cc395704165fbe629ba # v2
        with:
          theme: "dark"

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker Image from GHCR
        run: |
          IMAGE_TAG=latest
          docker pull ghcr.io/${{ github.repository_owner }}/${{ env.REPO }}:$IMAGE_TAG
          docker tag ghcr.io/${{ github.repository_owner }}/${{ env.REPO }}:$IMAGE_TAG teranode:latest

  run-docker-tests:
    needs: pull-image
    runs-on: teranode-runner-16-core
    strategy:
      matrix:
        test_config:
          # TNB Tests
          - test_dir: "test/tnb"
            test_tags: "test_tnb"
            test_suite: "TestTNB1TestSuite"
            test_func: "TestSendTxsInBatch"
            test_filename: "tnb1_test.go"
          - test_dir: "test/tnb"
            test_tags: "test_tnb"
            test_suite: "TestTNB1TestSuite"
            test_func: "TestReceiveExtendedFormatTx"
            test_filename: "tnb1_test.go"
          - test_dir: "test/tnb"
            test_tags: "test_tnb"
            test_suite: "TestTNB1TestSuite"
            test_func: "TestNoReformattingRequired"
            test_filename: "tnb1_test.go"
          - test_dir: "test/tnb"
            test_tags: "test_tnb"
            test_suite: "TestTNB6TestSuite"
            test_func: "TestUTXOSetManagement"
            test_filename: "tnb6_test.go"

          # TND Tests
          - test_dir: "test/tnd"
            test_tags: "test_tnd"
            test_suite: "TestTND1_1TestSuite"
            test_func: "TestBlockPropagation"
            test_filename: "tnd1_1_test.go"
          - test_dir: "test/tnd"
            test_tags: "test_tnd"
            test_suite: "TestTND1_1TestSuite"
            test_func: "TestBlockPropagationWithNotifications"
            test_filename: "tnd1_1_test.go"

          # TNA Tests
          - test_dir: "test/tna"
            test_tags: "test_tna"
            test_suite: "TNA1TestSuite"
            test_func: "TestBroadcastNewTxAllNodes"
            test_filename: "tna1_test.go"
          - test_dir: "test/tna"
            test_tags: "test_tna"
            test_suite: "TNA2TestSuite"
            test_func: "TestTxsReceivedAllNodes"
            test_filename: "tna2_test.go"
          - test_dir: "test/tna"
            test_tags: "test_tna"
            test_suite: "TestTNA4TestSuite"
            test_func: "TestBlockBroadcast"
            test_filename: "tna4_test.go"
          - test_dir: "test/tna"
            test_tags: "test_tna"
            test_suite: "TestTNA6TestSuite"
            test_func: "TestAcceptanceNextBlock"
            test_filename: "tna6_test.go"

          # FSM Tests
          - test_dir: "test/fsm"
            test_tags: "test_fsm"
            test_suite: "TestFsmTestSuite"
            test_func: "TestNodeCatchUpState_WithStartAndStopNodes"
            test_filename: "state_test.go"
          - test_dir: "test/fsm"
            test_tags: "test_fsm"
            test_suite: "TestFsmTestSuite"
            test_func: "TestNodeCatchUpStateSingleNode_WithP2PSwitch"
            test_filename: "state_test.go"
          - test_dir: "test/fsm"
            test_tags: "test_fsm"
            test_suite: "TestFsmTestSuite"
            test_func: "TestNodeCatchUpStateMultipleNodes_WithP2PSwitch"
            test_filename: "state_test.go"
          - test_dir: "test/fsm"
            test_tags: "test_fsm"
            test_suite: "TestFsmTestSuite"
            test_func: "TestNodeDoesNotSendMiningCandidate_CatchUpState_WithStartAndStopNodes"
            test_filename: "state_test.go"

          #TNx postgres tests - tnb6
          - test_dir: "test/tnb/withdaemon"
            test_tags: "test_tnb"
            test_func: "TestUnspentTransactionOutputsWithPostgres"
            test_filename: "tnb6_pg_test.go"

          #TNx postgres tests - tnb7
          - test_dir: "test/tnb/withdaemon"
            test_tags: "test_tnb"
            test_func: "TestValidatedTxShouldSpendInputsWithPostgres"
            test_filename: "tnb7_pg_test.go"

      max-parallel: 1
      fail-fast: false

    steps:
      - name: Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@f974e0c5942f8f37973c4cc395704165fbe629ba # v2
        with:
          theme: "dark"

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - name: Run Test
        run: |
          go clean -testcache
          docker pull ghcr.io/${{ github.repository_owner }}/${{ env.REPO }}:latest
          docker tag ghcr.io/${{ github.repository_owner }}/${{ env.REPO }}:latest teranode:latest
          go test -v -run "^${{ matrix.test_config.test_suite }}$/${{ matrix.test_config.test_func }}$" -tags ${{ matrix.test_config.test_tags }} ./${{ matrix.test_config.test_dir }}/${{ matrix.test_config.test_filename }}

        env:
          test_dir: ${{ matrix.test_config.test_dir }}
          test_tags: ${{ matrix.test_config.test_tags }}
          settings_context: ${{ matrix.test_config.settings_context || '' }}
          report_name: ${{ matrix.test_config.report_name }}
          GITHUB_ACTIONS: true
        continue-on-error: false

      # - name: Publish Test Summary Results
      #   run: npx github-actions-ctrf ${{ matrix.test_config.report_name }}

  run-daemon-tests:
    runs-on: teranode-runner-16-core
    steps:
      - name: Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@f974e0c5942f8f37973c4cc395704165fbe629ba # v2
        with:
          theme: "dark"

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - name: Run Block Subsidy Tests
        run: |
          go clean -testcache
          go test -v -run "^TestBlockSubsidy$" $TEST_DIR
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run Legacy Tests
        run: |
          go test -v $TEST_DIR/legacy_test.go
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run Reassign Tests
        run: |
          go test -v -run "^TestShouldAllowReassign$" $TEST_DIR
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run Reorg Tests
        run: |
          go test -v -run "^(\
          TestMoveUp|\
          TestMoveDownMoveUpWhenNewBlockIsGenerated|\
          TestMoveDownMoveUpWhenNoNewBlockIsGenerated|\
          TestTDRestart|\
          TestDynamicSubtreeSize|\
          TestInvalidBlockTestBlockValidationCatchup\
          )$" $TEST_DIR
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run RPC Smoke PG Tests
        run: |
          go test -v -run "^(\
          TestTracing|\
          TestSendTxAndCheckState|\
          TestShouldNotProcessNonFinalTx|\
          TestShouldRejectOversizedTx|\
          TestShouldRejectOversizedScript|\
          TestShouldAllowChainedTransactionsUseRpc|\
          TestDoubleInput|\
          TestGetBestBlockHash|\
          TestGetPeerInfo|\
          TestGetMiningInfo|\
          TestVersion|\
          TestGetBlockVerbosity|\
          TestGetBlockHeaderVerbose|\
          TestGetRawTransactionVerbose|\
          TestGetMiningCandidate|\
          TestGenerateToAddress|\
          TestBlockManagement\
          )$" $TEST_DIR
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run Spend UTXO Tests
        run: |
          go test -v -run "^TestShouldAllowSpendAllUtxos$" $TEST_DIR
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run UTXO Tests
        run: |
          go test -v -run "^(\
          TestFreezeAndUnfreezeUtxos|\
          TestDeleteAtHeightHappyPath|\
          TestSubtreeBlockHeightRetention|\
          )$" $TEST_DIR
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run TNC1.1 Test
        run: |
          go test -v -run "^TestVerifyMerkleRootCalculation$" $TEST_DIR
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run TNC1.2 Test
        run: |
          go test -v $TEST_DIR/tnc1_2_test.go
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run TNC1.3 Test
        run: |
          go test -v $TEST_DIR/tnc1_3_test.go
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run TNCA2 Postgres Test
        run: |
          go test -v $TEST_DIR/tna2_pg_test.go
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run TNC2.1 Test
        run: |
          go test -v -run "^TestVerifyMerkleRootCalculation|TestConcurrentCandidateIdentifiers$" $TEST_DIR
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run TNB2 Test
        run: |
          go test -v $TEST_DIR/tnb2_test.go
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Run TNE1.1 Test
        run: |
          go test -v $TEST_DIR/tne1_1_test.go
        env:
          GITHUB_ACTIONS: true
        continue-on-error: true

      - name: Check for Test Failures
        if: always()
        run: |
          if [[ "${{ job.status }}" == "failure" ]]; then
            echo "One or more test suites failed"
            exit 1
          fi
